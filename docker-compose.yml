version: "3.9"
services:
  pg_db:
    container_name: pg_db
    image: postgres:15.2-alpine
    env_file:
      - ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - app-network

  comlink:
      image: ghcr.io/swgoh-utils/swgoh-comlink:latest
      container_name: swgoh-comlink
      restart: always
      environment:
        - APP_NAME=shtierlitz_comlinc
      ports:
        - "3000:3000"
      networks:
        - app-network


  bot:
    build: .
    command: >
      bash -c "python bot_telegram.py"
    restart: always
    depends_on:
      pg_db:
        condition: service_healthy
      comlink:
        condition: service_started
    networks:
      - app-network
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql+asyncpg://postgres:Generosity007@pg_db/ultimate_warriors


networks:
  app-network:
    driver: bridge

volumes:
  pg_data:
