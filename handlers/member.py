# handlers/member.py
import os

from aiogram.dispatcher import FSMContext
from sqlalchemy import select

from src.utils import gac_statistic, get_new_day_start, is_admin
from src.player import PlayerData, PlayerScoreService, PlayerPowerService
from src.guild import GuildData
from create_bot import bot
from settings import async_session_maker
from aiogram import types, Dispatcher
import asyncio
from concurrent.futures import ThreadPoolExecutor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from db_models import Player


GROUP_CHAT_ID = os.environ.get("GROUP_ID")
COMMANDS = {
    "start": "–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö",
    "player": "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫ –≥–¥–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å–æ–≥–∏–ª—å–¥–∏–π—Ü—É",
    "gac": "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –í–ê —Å —Å—ã–ª–∫–∞–º–∏ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–≤",
    "reid": "–ö–æ–Ω—Ç—Ä–æ–ª—å —ç–Ω–∫–∏",
    "gp_all": "–°–ø–∏—Å–æ–∫ —Ä–æ—Å—Ç–∞ –≤—Å–µ–π –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –º–æ—â–∏ –∑–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –º–µ—Å—è—Ü",
    "guildinfo": "–ò–Ω—Ñ–∞ –æ –≥–∏–ª—å–¥–∏–∏",
    "admin": "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",

    # –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}


async def command_start(message: types.Message):
    is_guild_member = message.conf.get('is_guild_member', False)
    if is_guild_member:
        try:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("ü´µüèª –ò–Ω—Ñ–∞ –ø–æ –∏–≥—Ä–æ–∫–∞–º", callback_data='player'))
            keyboard.add(types.InlineKeyboardButton("‚öîÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –í–ê –ø–æ –≤—Å–µ–º", callback_data='gac'))
            keyboard.add(types.InlineKeyboardButton("üîã –ö–æ–Ω—Ç—Ä–æ–ª—å —ç–Ω–∫–∏", callback_data='reid'))
            keyboard.add(types.InlineKeyboardButton("üí™üèª –ì–ú –ø–æ –≤—Å–µ–º –∑–∞ –º–µ—Å—è—Ü", callback_data='gp_all'))
            keyboard.add(types.InlineKeyboardButton("üèõ –ò–Ω—Ñ–∞ –æ –≥–∏–ª—å–¥–∏–∏", callback_data='guildinfo'))
            keyboard.add(types.InlineKeyboardButton("üëÆüèª‚Äç‚ôÇÔ∏è –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–æ–≤", callback_data='admin'))
            await message.answer("üßëüèª‚Äçüåæ –ü–∞–Ω–µ–ª—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üë®üèª‚Äçüåæ", reply_markup=keyboard)
        except Exception as e:
            print(e)
            await message.reply(f"–û—à–∏–±–∫–∞:\n\n‚ùå‚ùå{e}‚ùå‚ùå\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞ –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")
    else:
        await message.answer(
            "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –Ω–µ –ø–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–≥ ID –æ—Ñ–∏—Ü–µ—Ä–∞–º. –ö–æ–º–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥–∏–ª—å–¥–∏—é –Ω–∞–ø–∏—à–∏—Ç–µ —Å—Ç–∞—Ä—à–µ–º—É –æ—Ñ–∏—Ü–µ—Ä—É –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")


async def command_gac_statistic(call: types.CallbackQuery):
    """–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ –æ –í–ê –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤"""
    is_guild_member = call.message.conf.get('is_guild_member', False)
    if is_guild_member:
        try:
            await call.message.reply(f"–î–æ–±—ã–≤–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...")
            st_1, st_2, st_3, st_4, st_5 = await gac_statistic()
            await bot.send_message(call.message.chat.id, text=st_1, parse_mode="Markdown")
            await bot.send_message(call.message.chat.id, text=st_2, parse_mode="Markdown")
            await bot.send_message(call.message.chat.id, text=st_3, parse_mode="Markdown")
            await bot.send_message(call.message.chat.id, text=st_4, parse_mode="Markdown")
            await bot.send_message(call.message.chat.id, text=st_5, parse_mode="Markdown")
        except Exception as e:
            await call.message.reply(f"–û—à–∏–±–∫–∞:\n\n‚ùå‚ùå{e}‚ùå‚ùå\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞ –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")
    else:
        await call.message.answer(
            "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –Ω–µ –ø–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–≥ ID –æ—Ñ–∏—Ü–µ—Ä–∞–º. –ö–æ–º–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥–∏–ª—å–¥–∏—é –Ω–∞–ø–∏—à–∏—Ç–µ —Å—Ç–∞—Ä—à–µ–º—É –æ—Ñ–∏—Ü–µ—Ä—É –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")

# async def get_user_data(call: types.CallbackQuery):
#     """"""
#     is_guild_member = call.message.conf.get('is_guild_member', False)
#     if is_guild_member:
#         player_name = call.message.text.split(maxsplit=1)[1]
#         try:
#             async with async_session_maker() as session:
#                 new_day_start = get_new_day_start()
#                 query = await session.execute(
#                     select(Player).filter_by(name=player_name).filter(
#                         Player.update_time >= new_day_start))
#                 player = query.scalars().first()
#             player_str_list = await PlayerData().extract_data(player)
#             await bot.send_message(call.message.chat.id, player_str_list)
#         except Exception as e:
#             await call.message.reply(f"–û—à–∏–±–∫–∞:\n\n‚ùå‚ùå{e}‚ùå‚ùå\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞ –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")


async def get_guild_info(call: types.CallbackQuery):
    is_guild_member = call.message.conf.get('is_guild_member', False)
    if is_guild_member:
        try:
            guild_info = await GuildData.get_latest_guild_data()
            info_text = "\n".join(guild_info)
            await bot.send_message(call.message.chat.id, info_text)
        except Exception as e:
            await call.message.reply(f"–û—à–∏–±–∫–∞:\n\n‚ùå‚ùå{e}‚ùå‚ùå\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞ –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")
    else:
        await call.message.answer(
            "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –Ω–µ –ø–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–≥ ID –æ—Ñ–∏—Ü–µ—Ä–∞–º. –ö–æ–º–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥–∏–ª—å–¥–∏—é –Ω–∞–ø–∏—à–∏—Ç–µ —Å—Ç–∞—Ä—à–µ–º—É –æ—Ñ–∏—Ü–µ—Ä—É –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")


async def get_gp_all(call: types.CallbackQuery):
    """–í—Å—è –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –º–æ—â—å –∑–∞ –º–µ—Å—è—Ü –ø–æ –≤—Å–µ–º"""
    is_guild_member = call.message.conf.get('is_guild_member', False)
    if is_guild_member:
        try:
            message_strings = await PlayerPowerService.get_galactic_power_all()
            await bot.send_message(call.message.chat.id, message_strings)
        except Exception as e:
            await call.message.reply(f"–û—à–∏–±–∫–∞:\n\n‚ùå‚ùå{e}‚ùå‚ùå\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞ –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")
    else:
        await call.message.answer(
            "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –Ω–µ –ø–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–≥ ID –æ—Ñ–∏—Ü–µ—Ä–∞–º. –ö–æ–º–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥–∏–ª—å–¥–∏—é –Ω–∞–ø–∏—à–∏—Ç–µ —Å—Ç–∞—Ä—à–µ–º—É –æ—Ñ–∏—Ü–µ—Ä—É –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")

def register_handlers_member(dp: Dispatcher):
    dp.register_message_handler(command_start, commands=['start'])
    # dp.register_message_handler(get_user_data, text='player1', state='*', run_task=True)
    dp.register_callback_query_handler(command_gac_statistic, text='gac', state='*')
    dp.register_callback_query_handler(get_gp_all, text='gp_all', state='*')
    dp.register_callback_query_handler(get_guild_info, text='guildinfo')
